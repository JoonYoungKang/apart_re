{"ast":null,"code":"var _jsxFileName = \"/Users/joonyoungkang/Desktop/apart_re/\\u1106\\u116E\\u110C\\u1166/src/pdfViewers.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { saveAs } from 'file-saver';\nimport { pdfjs } from 'react-pdf';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// pdfjs 라이브러리의 worker 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nconst PdfViewer = ({\n  hexString\n}) => {\n  _s();\n  const [pdfData, setPdfData] = useState(null);\n\n  // PDF 헥사값을 Blob으로 변환하고 다운로드\n  const handleDownloadPdf = () => {\n    const hexStringCleaned = hexString.replace(/[\"]/g, '');\n    const bytes = new Uint8Array(hexStringCleaned.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n    const blob = new Blob([bytes], {\n      type: 'application/pdf'\n    });\n    setPdfData(blob); // 상태 업데이트\n    saveAs(blob, \"downloaded.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadPdf,\n      children: \"PDF \\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfViewer, \"fkxxSGio4IZ8eHepRfysCX3WJ0Y=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","saveAs","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","PdfViewer","hexString","_s","pdfData","setPdfData","handleDownloadPdf","hexStringCleaned","replace","bytes","Uint8Array","match","map","byte","parseInt","blob","Blob","type","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joonyoungkang/Desktop/apart_re/무제/src/pdfViewers.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { saveAs } from 'file-saver';\nimport { pdfjs } from 'react-pdf';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// pdfjs 라이브러리의 worker 설정\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\nconst PdfViewer = ({ hexString }) => {\n    const [pdfData, setPdfData] = useState(null);\n\n    // PDF 헥사값을 Blob으로 변환하고 다운로드\n    const handleDownloadPdf = () => {\n        const hexStringCleaned = hexString.replace(/[\"]/g, '');\n        const bytes = new Uint8Array(hexStringCleaned.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n        const blob = new Blob([bytes], { type: 'application/pdf' });\n        setPdfData(blob); // 상태 업데이트\n        saveAs(blob, \"downloaded.pdf\");\n    };\n\n    return (\n        <div>\n            <button onClick={handleDownloadPdf}>PDF 다운로드</button>\n        </div>\n    );\n};\n\nexport default PdfViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,KAAK,QAAQ,WAAW;AAEjC,OAAO,sCAAsC;;AAE7C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,KAAK,CAACG,mBAAmB,CAACC,SAAS,GAAI,2CAA0CJ,KAAK,CAACK,OAAQ,oBAAmB;AAElH,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMa,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,MAAMC,gBAAgB,GAAGL,SAAS,CAACM,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;IACtD,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAACH,gBAAgB,CAACI,KAAK,CAAC,SAAS,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIC,QAAQ,CAACD,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/F,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACP,KAAK,CAAC,EAAE;MAAEQ,IAAI,EAAE;IAAkB,CAAC,CAAC;IAC3DZ,UAAU,CAACU,IAAI,CAAC,CAAC,CAAC;IAClBrB,MAAM,CAACqB,IAAI,EAAE,gBAAgB,CAAC;EAClC,CAAC;EAED,oBACIlB,OAAA;IAAAqB,QAAA,eACIrB,OAAA;MAAQsB,OAAO,EAAEb,iBAAkB;MAAAY,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd,CAAC;AAACpB,EAAA,CAjBIF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAmBf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}