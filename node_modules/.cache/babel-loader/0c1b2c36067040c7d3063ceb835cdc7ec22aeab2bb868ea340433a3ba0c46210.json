{"ast":null,"code":"var _jsxFileName = \"/Users/joonyoungkang/Desktop/apart_re/\\u1106\\u116E\\u110C\\u1166/src/pdfViewers.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { saveAs } from 'file-saver';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\n// pdfjs 라이브러리의 worker 설정\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nconst PdfViewer = ({\n  hexString\n}) => {\n  _s();\n  const [pdfData, setPdfData] = useState(null);\n  const [numPages, setNumPages] = useState(null);\n  const hexString2 = hexString.replace(/[\"]/g, '');\n\n  // PDF 로드 성공 시 호출될 함수\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n\n  // PDF 헥사값을 Blob으로 변환\n  const handleLoadPdf = hex => {\n    const bytes = new Uint8Array(hex.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n    const blob = new Blob([bytes], {\n      type: 'application/pdf'\n    });\n    setPdfData(blob);\n  };\n\n  // PDF 다운로드\n  const handleDownloadPdf = () => {\n    if (pdfData) {\n      saveAs(pdfData, \"downloaded.pdf\");\n    } else {\n      alert('PDF가 로드되지 않았습니다. 먼저 PDF를 로드해주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLoadPdf(hexString2),\n      children: \"PDF \\uBD88\\uB7EC\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadPdf,\n      children: \"PDF \\uB2E4\\uC6B4\\uB85C\\uB4DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(PdfViewer, \"rNFkGuTw3TB5pm88PocTaTnyrJs=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useState","saveAs","Document","Page","pdfjs","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","PdfViewer","hexString","_s","pdfData","setPdfData","numPages","setNumPages","hexString2","replace","onDocumentLoadSuccess","handleLoadPdf","hex","bytes","Uint8Array","match","map","byte","parseInt","blob","Blob","type","handleDownloadPdf","alert","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joonyoungkang/Desktop/apart_re/무제/src/pdfViewers.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { saveAs } from 'file-saver';\nimport { Document, Page, pdfjs } from 'react-pdf';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\n// pdfjs 라이브러리의 worker 설정\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\n\nconst PdfViewer = ({ hexString }) => {\n\n    const [pdfData, setPdfData] = useState(null);\n    const [numPages, setNumPages] = useState(null);\n\n    const hexString2 = hexString.replace(/[\"]/g,'');\n\n    // PDF 로드 성공 시 호출될 함수\n    const onDocumentLoadSuccess = ({ numPages }) => {\n        setNumPages(numPages);\n    };\n\n    // PDF 헥사값을 Blob으로 변환\n    const handleLoadPdf = (hex) => {\n        const bytes = new Uint8Array(hex.match(/.{1,2}/g).map(byte => parseInt(byte, 16)));\n        const blob = new Blob([bytes], { type: 'application/pdf' });\n        setPdfData(blob);\n    };\n\n    // PDF 다운로드\n    const handleDownloadPdf = () => {\n        if (pdfData) {\n            saveAs(pdfData, \"downloaded.pdf\");\n        } else {\n            alert('PDF가 로드되지 않았습니다. 먼저 PDF를 로드해주세요.');\n        }\n    };\n\n    return (\n        <div>\n            <button onClick={() => handleLoadPdf(hexString2)}>PDF 불러오기</button>\n            <button onClick={handleDownloadPdf}>PDF 다운로드</button>\n            {/* {pdfData && (\n                <Document\n                    file={pdfData}\n                    onLoadSuccess={onDocumentLoadSuccess}\n                >\n                  <Page key={`page_${1}`} pageNumber={1} />\n                </Document>\n            )} */}\n        </div>\n    );\n};\n\nexport default PdfViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,YAAY;AACnC,SAASC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,QAAQ,WAAW;AAEjD,OAAO,sCAAsC;AAC7C,OAAO,6CAA6C;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,KAAK,CAACG,mBAAmB,CAACC,SAAS,GAAI,2CAA0CJ,KAAK,CAACK,OAAQ,oBAAmB;AAElH,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAEjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMiB,UAAU,GAAGN,SAAS,CAACO,OAAO,CAAC,MAAM,EAAC,EAAE,CAAC;;EAE/C;EACA,MAAMC,qBAAqB,GAAGA,CAAC;IAAEJ;EAAS,CAAC,KAAK;IAC5CC,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC;;EAED;EACA,MAAMK,aAAa,GAAIC,GAAG,IAAK;IAC3B,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAACF,GAAG,CAACG,KAAK,CAAC,SAAS,CAAC,CAACC,GAAG,CAACC,IAAI,IAAIC,QAAQ,CAACD,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;IAClF,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACP,KAAK,CAAC,EAAE;MAAEQ,IAAI,EAAE;IAAkB,CAAC,CAAC;IAC3DhB,UAAU,CAACc,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIlB,OAAO,EAAE;MACTZ,MAAM,CAACY,OAAO,EAAE,gBAAgB,CAAC;IACrC,CAAC,MAAM;MACHmB,KAAK,CAAC,kCAAkC,CAAC;IAC7C;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAA2B,QAAA,gBACI3B,OAAA;MAAQ4B,OAAO,EAAEA,CAAA,KAAMd,aAAa,CAACH,UAAU,CAAE;MAAAgB,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnEhC,OAAA;MAAQ4B,OAAO,EAAEH,iBAAkB;MAAAE,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OASpD,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA1CIF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}